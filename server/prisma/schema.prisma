// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String    @id @default(uuid())
  email                  String    @unique
  password               String
  role                   String
  token                  String?
  tokenCreationTimestamp DateTime? @default(now()) @db.Timestamptz(3)
  Listing                Listing[]
}

model Listing {
  id          String  @id @default(uuid())
  petName     String
  petPhoto   String
  petType     String
  petBreed    String?
  petAge      Int
  location    String
  description String?
  tags        String?

  creationTimestamp   DateTime @default(now())
  lastUpdateTimestamp DateTime @updatedAt
  published           Boolean @default(false)

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Form {
  id                  String   @id @default(uuid())
  petType             String
  questionType        String
  question            String
  answerOptions       String
  creationTimestamp   DateTime @default(now())
  lastUpdateTimestamp DateTime @updatedAt
}

model Application {
  id                  String   @id @default(uuid())
  listingId           String
  form                Json    
  userId              String
  hasDocuments        Boolean
  status              String
  creationTimestamp   DateTime @default(now())
  lastUpdateTimestamp DateTime @updatedAt
}

model Document {
  id                  String   @id @default(uuid())
  applicationId       String
  document            Bytes    @db.ByteA
  creationTimestamp   DateTime @default(now())
  lastUpdateTimestamp DateTime @updatedAt
}

// Only for Testing - To Be Deleted Later
model Test {
  id String @id @default(uuid())
}
